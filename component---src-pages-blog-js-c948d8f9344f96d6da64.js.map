{"version":3,"sources":["webpack:///./src/sections/Writing.js","webpack:///./src/sections/Talks.js","webpack:///./src/pages/blog.js","webpack:///./src/components/Card.js","webpack:///./src/components/ImageSubtitle.js"],"names":["Background","Triangle","color","height","width","invertX","invertY","CoverImage","styled","img","EllipsisHeading","Heading","props","theme","colors","primary","Post","title","text","image","url","date","time","Card","onClick","window","open","pb","m","p","src","alt","ImageSubtitle","bg","x","y","round","Math","ceil","Writing","query","render","contentfulAbout","console","log","posts","writingTech","map","postFromGraphql","description","publishedDate","coverImage","linkBrazilian","id","Component","Section","Container","Header","name","icon","label","minWidth","rest","bottom","key","Talks","talks","IndexPage","Layout","Footer","CardContainer","div","CardRebass","attrs","boxShadow","borderRadius","BORDER_PATH_MAP","BORDER_RADIUS_MAP","BORDER_RADIUS","Box","propTypes","PropTypes","oneOf","bool","defaultProps"],"mappings":"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","file":"component---src-pages-blog-js-c948d8f9344f96d6da64.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Text, Flex, Box } from 'rebass';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport Section from '../components/Section';\nimport { CardContainer, Card } from '../components/Card';\nimport Triangle from '../components/Triangle';\nimport ImageSubtitle from '../components/ImageSubtitle';\n\nconst MEDIUM_CDN = 'https://cdn-images-1.medium.com/max/400';\nconst MEDIUM_URL = 'https://medium.com';\n\nconst Background = () => (\n  <div>\n    <Triangle\n      color=\"backgroundDark\"\n      height={['35vh', '80vh']}\n      width={['95vw', '60vw']}\n    />\n\n    <Triangle\n      color=\"secondary\"\n      height={['38vh', '80vh']}\n      width={['50vw', '35vw']}\n    />\n\n    <Triangle\n      color=\"primaryDark\"\n      height={['25vh', '35vh']}\n      width={['75vw', '60vw']}\n      invertX\n    />\n\n    <Triangle\n      color=\"backgroundDark\"\n      height={['20vh', '20vh']}\n      width={['100vw', '100vw']}\n      invertX\n      invertY\n    />\n  </div>\n);\n\nconst CoverImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst EllipsisHeading = styled(Heading)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-inline-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  border-bottom: ${props => props.theme.colors.primary} 5px solid;\n`;\n\nconst Post = ({ title, text, image, url, date, time }) => (\n  <Card onClick={() => window.open(url, '_blank')} pb={4}>\n    <EllipsisHeading m={3} p={1}>\n      {title}\n    </EllipsisHeading>\n    {image && <CoverImage src={image} height=\"200px\" alt={title} />}\n    <Text m={3}>{text}</Text>\n    <ImageSubtitle bg=\"primary\" color=\"white\" x=\"right\" y=\"bottom\" round>\n      {`${date} - ${Math.ceil(time)} min`}\n    </ImageSubtitle>\n  </Card>\n);\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n};\n\nconst parsePost = author => postFromGraphql => {\n  const { title, description, publishedDate, coverImage,linkBrazilian } = postFromGraphql;\n\n  return {\n    id: \"x-id\",\n    title,\n    time: 3,\n    date: publishedDate,\n    text: description,\n    image: coverImage.image.src,\n    url: linkBrazilian,\n    Component: Post,\n  };\n};\n\nconst MorePosts = ({ username, name, number }) => (\n  <Card\n    onClick={() => window.open(`${MEDIUM_URL}/@${username}/`, '_blank')}\n    p={4}\n  >\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      style={{ height: '100%' }}\n    >\n      <Box>\n        <EllipsisHeading fontSize={5} my={2}>\n          Hooray! &nbsp;\n          <span role=\"img\" aria-label=\"party\">\n            🎉\n          </span>\n        </EllipsisHeading>\n        <Heading lineHeight={1.5}>\n          See More ..\n          {/* <Text color=\"secondary\">{name}</Text> */}\n          {/* {`has published ${number} more posts!`} */}\n        </Heading>\n      </Box>\n      <Heading color=\"primary\" mt={5} textAlign=\"right\">\n        Go to Medium &nbsp;\n        <FontAwesomeIcon name=\"arrow-right\" aria-label=\"Go to Medium\" />\n      </Heading>\n    </Flex>\n  </Card>\n);\n\nMorePosts.propTypes = {\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number,\n};\n\nconst edgeToArray = data => data.edges.map(edge => edge.node);\n\nconst Writing = () => (\n  <StaticQuery\n    query={graphql`\n      query WritingQuery {\n        contentfulAbout {\n          writingTech {\n            title\n            description\n            linkBrazilian\n            linkEnglish\n            readMinutes\n            coverImage {\n              title\n              image: resize(width: 200, quality: 100) {\n                src\n              }\n            }\n            publishedDate(formatString: \"YYYY\")\n          }\n        }\n      }\n    `}\n    render={({ contentfulAbout }) => {\n      console.log(contentfulAbout)\n      const posts = contentfulAbout.writingTech.map(parsePost(\"denisvieira\"));\n\n      return (\n        <Section.Container id=\"writing\" Background={Background}>\n          <Section.Header name=\"Writing\" icon=\"✍️\" label=\"writing\" />\n          <CardContainer minWidth=\"300px\">\n            {posts.map(({ Component, ...rest }) => (\n              <Fade bottom key={rest.id}>\n                <Component {...rest} key={rest.id} />\n              </Fade>\n            ))}\n          </CardContainer>\n        </Section.Container>\n      );\n    }}\n  />\n);\n\nexport default Writing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading, Text, Flex, Box } from 'rebass';\nimport { StaticQuery, graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\nimport FontAwesomeIcon from 'react-fontawesome';\nimport Section from '../components/Section';\nimport { CardContainer, Card } from '../components/Card';\nimport Triangle from '../components/Triangle';\nimport ImageSubtitle from '../components/ImageSubtitle';\n\nconst MEDIUM_CDN = 'https://cdn-images-1.medium.com/max/400';\nconst MEDIUM_URL = 'https://medium.com';\n\nconst Background = () => (\n  <div>\n    <Triangle\n      color=\"secondaryLight\"\n      height={['50vh', '20vh']}\n      width={['50vw', '50vw']}\n      invertY\n    />\n\n    <Triangle\n      color=\"primaryDark\"\n      height={['20vh', '40vh']}\n      width={['75vw', '70vw']}\n      invertX\n    />\n\n    <Triangle\n      color=\"backgroundDark\"\n      height={['25vh', '20vh']}\n      width={['100vw', '100vw']}\n    />\n  </div>\n);\n\nconst CoverImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst EllipsisHeading = styled(Heading)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-inline-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  border-bottom: ${props => props.theme.colors.primary} 5px solid;\n`;\n\nconst Post = ({ title, text, image, url, date, time }) => (\n  <Card onClick={() => window.open(url, '_blank')} pb={4}>\n    <EllipsisHeading m={3} p={1}>\n      {title}\n    </EllipsisHeading>\n    {image && <CoverImage src={image} height=\"200px\" alt={title} />}\n    <Text m={3}>{text}</Text>\n    <ImageSubtitle bg=\"primary\" color=\"white\" x=\"right\" y=\"bottom\" round>\n      {`${date} - ${Math.ceil(time)} min`}\n    </ImageSubtitle>\n  </Card>\n);\n\nPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n};\n\nconst parsePost = author => postFromGraphql => {\n  const { title, description, publishedDate, coverImage,linkBrazilian } = postFromGraphql;\n\n  return {\n    id: \"x-id\",\n    title,\n    time: 3,\n    date: publishedDate,\n    text: description,\n    image: coverImage.image.src,\n    url: linkBrazilian,\n    Component: Post,\n  };\n};\n\nconst MorePosts = ({ username, name, number }) => (\n  <Card\n    onClick={() => window.open(`${MEDIUM_URL}/@${username}/`, '_blank')}\n    p={4}\n  >\n    <Flex\n      flexDirection=\"column\"\n      justifyContent=\"space-between\"\n      style={{ height: '100%' }}\n    >\n      <Box>\n        <EllipsisHeading fontSize={5} my={2}>\n          Hooray! &nbsp;\n          <span role=\"img\" aria-label=\"party\">\n            🎉\n          </span>\n        </EllipsisHeading>\n        <Heading lineHeight={1.5}>\n          See More ..\n          {/* <Text color=\"secondary\">{name}</Text> */}\n          {/* {`has published ${number} more posts!`} */}\n        </Heading>\n      </Box>\n      <Heading color=\"primary\" mt={5} textAlign=\"right\">\n        Go to Medium &nbsp;\n        <FontAwesomeIcon name=\"arrow-right\" aria-label=\"Go to Medium\" />\n      </Heading>\n    </Flex>\n  </Card>\n);\n\nMorePosts.propTypes = {\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number,\n};\n\nconst edgeToArray = data => data.edges.map(edge => edge.node);\n\nconst Talks = () => (\n  <StaticQuery\n    query={graphql`\n      query TalksQuery {\n        contentfulAbout {\n          talks {\n            title\n            description\n            linkBrazilian\n            linkEnglish\n            readMinutes\n            coverImage {\n              title\n              image: resize(width: 200, quality: 100) {\n                src\n              }\n            }\n            publishedDate(formatString: \"YYYY\")\n          }\n        }\n      }\n    `}\n    render={({ contentfulAbout }) => {\n      console.log(contentfulAbout)\n      const posts = contentfulAbout.talks.map(parsePost(\"denisvieira\"));\n\n      return (\n        <Section.Container id=\"talks\" Background={Background}>\n          <Section.Header name=\"Talks\" icon=\"✍️\" label=\"talks\" />\n          <CardContainer minWidth=\"300px\">\n            {posts.map(({ Component, ...rest }) => (\n              <Fade bottom key={rest.id}>\n                <Component {...rest} key={rest.id} />\n              </Fade>\n            ))}\n          </CardContainer>\n        </Section.Container>\n      );\n    }}\n  />\n);\n\nexport default Talks;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport Writing from '../sections/Writing';\nimport Talks from '../sections/Talks';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nconst IndexPage = () => (\n  <Layout>\n    <Header />\n    <Writing />\n    <Talks />\n    <Footer />\n  </Layout>\n);\n\nexport default IndexPage;\n","import styled from 'styled-components';\nimport { Card as CardRebass } from 'rebass';\n\nexport const CardContainer = styled.div`\n  display: grid;\n  grid-gap: 30px;\n\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(${props => props.minWidth}, 1fr)\n  );\n  justify-items: center;\n\n  @media only screen and (max-width: 400px) {\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  }\n`;\n\nexport const Card = styled(CardRebass).attrs({\n  bg: 'white',\n  boxShadow: 0,\n  borderRadius: 8,\n})`\n  position: relative;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n  transition: all 0.25s;\n  top: 0;\n  height: 100%;\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\n\n  &:hover {\n    top: -10px;\n    box-shadow: 0 12px 16px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport default Card;\n","import styled from 'styled-components';\nimport { Box } from 'rebass';\nimport PropTypes from 'prop-types';\n\nconst BORDER_SPACING = '20px';\nconst BORDER_RADIUS = '8px';\n\nconst BORDER_PATH_MAP = {\n  'top-left': `polygon(0 0%, 100% 0%, calc(100% - ${BORDER_SPACING}) 100%, 0% 100%);`,\n  'top-right': `polygon(0 0%, 100% 0%, 100% 100%, ${BORDER_SPACING} 100%);`,\n  'bottom-right': `polygon(${BORDER_SPACING} 0%, 100% 0%, 100% 100%, 0% 100%);`,\n  'bottom-left': `polygon(0 0%, calc(100% - ${BORDER_SPACING}) 0%, 100% 100%, 0% 100%);`,\n};\n\nconst BORDER_RADIUS_MAP = {\n  'top-left': `${BORDER_RADIUS} 0 0 0`,\n  'top-right': `0 ${BORDER_RADIUS} 0 0`,\n  'bottom-right': `0 0 ${BORDER_RADIUS} 0`,\n  'bottom-left': `0 0 0 ${BORDER_RADIUS}`,\n};\n\nconst ImageSubtitle = styled(Box)`\n  position: absolute;\n  display: inline;\n  padding: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  text-transform: uppercase;\n\n  ${props => props.x}: 0;\n  ${props => props.y}: 0;\n  \n  ${props =>\n    props.x === 'left'\n      ? `padding-right: ${BORDER_SPACING};`\n      : `padding-left: ${BORDER_SPACING};`}\n  clip-path: ${props => BORDER_PATH_MAP[`${props.y}-${props.x}`]};\n  \n  ${props =>\n    props.round &&\n    `border-radius: ${BORDER_RADIUS_MAP[`${props.y}-${props.x}`]};`}\n`;\n\nImageSubtitle.propTypes = {\n  x: PropTypes.oneOf(['left', 'right']),\n  y: PropTypes.oneOf(['top', 'bottom']),\n  round: PropTypes.bool,\n};\n\nImageSubtitle.defaultProps = {\n  x: 'left',\n  y: 'top',\n  round: false,\n};\n\nexport default ImageSubtitle;\n"],"sourceRoot":""}